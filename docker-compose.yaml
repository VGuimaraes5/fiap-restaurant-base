version: "3.4"

services:
  pedidos:
    image: ${DOCKER_REGISTRY-}restaurant-pedidos
    container_name: pedidos
    build:
      context: Pedido
      dockerfile: Dockerfile
      args:
        PORT: 5001
    restart: unless-stopped
    ports:
      - "${APP_PEDIDO_PORT}:5001"
    environment:
      ASPNETCORE_URLS: http://*:${APP_PEDIDO_PORT}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ConnectionStrings__ConnectionString: server=mysqldatabase;port=${MYSQL_PORT};database=${MYSQL_PEDIDOS_DATABASE};uid=${MYSQL_PEDIDOS_USER};password=${MYSQL_PEDIDOS_PASSWORD}
      ConnectionStrings__RabbitMQ: amqp://admin:admin123@host.docker.internal:5672
    depends_on:
      mysqldatabase:
        condition: service_healthy
    networks:
      - mysql_network
      - restaurant_network
      # - rabbitmq_network

  pagamentos:
    image: ${DOCKER_REGISTRY-}restaurant-pagamentos
    container_name: pagamentos
    build:
      context: Pagamento
      dockerfile: Dockerfile
      args:
        PORT: 5002
    restart: unless-stopped
    ports:
      - "${APP_PAGAMENTO_PORT}:5002"
    environment:
      ASPNETCORE_URLS: http://*:${APP_PAGAMENTO_PORT}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ConnectionStrings__ConnectionString: server=mysqldatabase;port=${MYSQL_PORT};database=${MYSQL_PAGAMENTOS_DATABASE};uid=${MYSQL_PAGAMENTOS_USER};password=${MYSQL_PAGAMENTOS_PASSWORD}
      ConnectionStrings__RabbitMQ: amqp://admin:admin123@host.docker.internal:5672
    depends_on:
      mysqldatabase:
        condition: service_healthy
    networks:
      - mysql_network
      - restaurant_network

  producao:
    image: ${DOCKER_REGISTRY-}restaurant-producao
    container_name: producao
    build:
      context: Producao
      dockerfile: Dockerfile
      args:
        PORT: 5003
    restart: unless-stopped
    ports:
      - "${APP_PRODUCAO_PORT}:5003"
    environment:
      ASPNETCORE_URLS: http://*:${APP_PRODUCAO_PORT}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      MONGO_RESTAURANT_DATABASE: ${MONGO_RESTAURANT_DATABASE}
      MONGO_PRODUCAO_USER: ${MONGO_PRODUCAO_USER}
      MONGO_PRODUCAO_PASSWORD: ${MONGO_PRODUCAO_PASSWORD}
      MONGO_PRODUCAO_COLLECTION: ${MONGO_PRODUCAO_COLLECTION}
      ConnectionStrings__RabbitMQ: amqp://admin:admin123@host.docker.internal:5672
      Mongo__ConnectionString: mongodb://rootuser:passw0rd7es7e@host.docker.internal:27017
    networks:
      - restaurant_network

  mysqldatabase:
    image: mysql:8.0.27
    container_name: mysqldatabase_pedido
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MONGO_PRODUCAO_PASSWORD}
    ports:
      - "3306:3306"
      - "33060:33060"
    expose:
      - 3306
      - 33060
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - mysql_network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: passw0rd7es7e

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin123"

volumes:
  db_data:
  mongodb_data:

networks:
  mysql_network:
  restaurant_network:
